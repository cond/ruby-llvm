# Generated by ffi_gen. Please do not change this file by hand.

require 'ffi'

module Cairo
  extend FFI::Library
  ffi_lib 'cairo'
  
  # (Not documented)
  # 
  # <em>This entry is only for documentation and no real method. The FFI::Enum can be accessed via #enum_type(:svg_version).</em>
  # 
  # === Options:
  # :_1 ::
  #   
  # :_2 ::
  #   
  # 
  # @method _enum_svg_version_
  # @return [Symbol]
  # @scope class
  enum :svg_version, [
    :_1,
    :_2
  ]
  
  # (Not documented)
  # 
  # @method svg_surface_create(filename, width_in_points, height_in_points)
  # @param [String] filename 
  # @param [Float] width_in_points 
  # @param [Float] height_in_points 
  # @return [FFI::Pointer(*SurfaceT)] 
  # @scope class
  attach_function :svg_surface_create, :cairo_svg_surface_create, [:string, :double, :double], :pointer
  
  # (Not documented)
  # 
  # @method svg_surface_create_for_stream(write_func, closure, width_in_points, height_in_points)
  # @param [FFI::Pointer(WriteFuncT)] write_func 
  # @param [FFI::Pointer(*Void)] closure 
  # @param [Float] width_in_points 
  # @param [Float] height_in_points 
  # @return [FFI::Pointer(*SurfaceT)] 
  # @scope class
  attach_function :svg_surface_create_for_stream, :cairo_svg_surface_create_for_stream, [:pointer, :pointer, :double, :double], :pointer
  
  # (Not documented)
  # 
  # @method svg_surface_restrict_to_version(surface, version)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @param [Symbol from _enum_svg_version_] version 
  # @return [nil] 
  # @scope class
  attach_function :svg_surface_restrict_to_version, :cairo_svg_surface_restrict_to_version, [:pointer, :svg_version], :void
  
  # (Not documented)
  # 
  # @method svg_get_versions(versions, num_versions)
  # @param [FFI::Pointer(**SvgVersionT)] versions 
  # @param [FFI::Pointer(*Int)] num_versions 
  # @return [nil] 
  # @scope class
  attach_function :svg_get_versions, :cairo_svg_get_versions, [:pointer, :pointer], :void
  
  # (Not documented)
  # 
  # @method svg_version_to_string(version)
  # @param [Symbol from _enum_svg_version_] version 
  # @return [String] 
  # @scope class
  attach_function :svg_version_to_string, :cairo_svg_version_to_string, [:svg_version], :string
  
end
