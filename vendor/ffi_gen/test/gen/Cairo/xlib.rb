# Generated by ffi_gen. Please do not change this file by hand.

require 'ffi'

module Cairo
  extend FFI::Library
  ffi_lib 'cairo'
  
  # (Not documented)
  # 
  # @method xlib_surface_create(dpy, drawable, visual, width, height)
  # @param [FFI::Pointer(*Display)] dpy 
  # @param [Integer] drawable 
  # @param [FFI::Pointer(*Visual)] visual 
  # @param [Integer] width 
  # @param [Integer] height 
  # @return [FFI::Pointer(*SurfaceT)] 
  # @scope class
  attach_function :xlib_surface_create, :cairo_xlib_surface_create, [:pointer, :ulong, :pointer, :int, :int], :pointer
  
  # (Not documented)
  # 
  # @method xlib_surface_create_for_bitmap(dpy, bitmap, screen, width, height)
  # @param [FFI::Pointer(*Display)] dpy 
  # @param [Integer] bitmap 
  # @param [FFI::Pointer(*Screen)] screen 
  # @param [Integer] width 
  # @param [Integer] height 
  # @return [FFI::Pointer(*SurfaceT)] 
  # @scope class
  attach_function :xlib_surface_create_for_bitmap, :cairo_xlib_surface_create_for_bitmap, [:pointer, :ulong, :pointer, :int, :int], :pointer
  
  # (Not documented)
  # 
  # @method xlib_surface_set_size(surface, width, height)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @param [Integer] width 
  # @param [Integer] height 
  # @return [nil] 
  # @scope class
  attach_function :xlib_surface_set_size, :cairo_xlib_surface_set_size, [:pointer, :int, :int], :void
  
  # (Not documented)
  # 
  # @method xlib_surface_set_drawable(surface, drawable, width, height)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @param [Integer] drawable 
  # @param [Integer] width 
  # @param [Integer] height 
  # @return [nil] 
  # @scope class
  attach_function :xlib_surface_set_drawable, :cairo_xlib_surface_set_drawable, [:pointer, :ulong, :int, :int], :void
  
  # (Not documented)
  # 
  # @method xlib_surface_get_display(surface)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @return [FFI::Pointer(*Display)] 
  # @scope class
  attach_function :xlib_surface_get_display, :cairo_xlib_surface_get_display, [:pointer], :pointer
  
  # (Not documented)
  # 
  # @method xlib_surface_get_drawable(surface)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @return [Integer] 
  # @scope class
  attach_function :xlib_surface_get_drawable, :cairo_xlib_surface_get_drawable, [:pointer], :ulong
  
  # (Not documented)
  # 
  # @method xlib_surface_get_screen(surface)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @return [FFI::Pointer(*Screen)] 
  # @scope class
  attach_function :xlib_surface_get_screen, :cairo_xlib_surface_get_screen, [:pointer], :pointer
  
  # (Not documented)
  # 
  # @method xlib_surface_get_visual(surface)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @return [FFI::Pointer(*Visual)] 
  # @scope class
  attach_function :xlib_surface_get_visual, :cairo_xlib_surface_get_visual, [:pointer], :pointer
  
  # (Not documented)
  # 
  # @method xlib_surface_get_depth(surface)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @return [Integer] 
  # @scope class
  attach_function :xlib_surface_get_depth, :cairo_xlib_surface_get_depth, [:pointer], :int
  
  # (Not documented)
  # 
  # @method xlib_surface_get_width(surface)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @return [Integer] 
  # @scope class
  attach_function :xlib_surface_get_width, :cairo_xlib_surface_get_width, [:pointer], :int
  
  # (Not documented)
  # 
  # @method xlib_surface_get_height(surface)
  # @param [FFI::Pointer(*SurfaceT)] surface 
  # @return [Integer] 
  # @scope class
  attach_function :xlib_surface_get_height, :cairo_xlib_surface_get_height, [:pointer], :int
  
end
